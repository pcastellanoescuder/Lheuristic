shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
install.packages("corrplot")
runApp()
runApp()
install.packages("Hmisc")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
met <- iris
exp <- iris
One <- "Sepal.Width"
colnames(iris)
One.df <- met[, colnames(met) == One]
Two.df <- exp[, colnames(exp) == One]
TOTAL <- cbind(One.df, Two.df)
TOTAL <- ad.data.frame(cbind(One.df, Two.df))
TOTAL <- as.data.frame(cbind(One.df, Two.df))
View(TOTAL)
colnames(TOTAL) <- c("Gene Methylation", "Gene Expression")
View(TOTAL)
correlation_plot <- ggplot(TOTAL, aes(x = `Gene Methylation`, y = `Gene Expression`)) +
geom_point() +
xlab("Gene Methylation") +
ylab("Gene Expression") +
theme(legend.position="none") +
theme_minimal()
correlation_plot
runApp()
rownames(met) <- paste0(rownames(met), "_MET")
rownames(exp) <- paste0(rownames(exp), "_EXP")
c.data <- cbind(met, exp)
c.data <- as.matrix(round(cor(c.data), 3))
c.data
runApp()
x <- colnames(c.data)
x
runApp()
x[1]
One.df <- met[, colnames(met) == One]
Two.df <- exp[, colnames(exp) == One]
TOTAL <- as.data.frame(cbind(One.df[, 1], Two.df[, 1]))
TOTAL <- as.data.frame(cbind(One.df, Two.df))
colnames(TOTAL) <- c("Gene Methylation", "Gene Expression")
View(TOTAL)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
met <- iris[,1:4]
exp <- iris[,1:4]
i<-1
my_cor_matrix <- NULL
my_cor_matrix$Correlation[i] <- cor.test(met[, colnames(met)[i]], exp[, colnames(exp) == colnames(met)[1]])$p.value
my_cor_matrix
View(my_cor_matrix)
cor.test(met[, colnames(met)[i]], exp[, colnames(exp) == colnames(met)[1]])$p.value
my_cor_matrix <- data.frame(Gene = NA, Correlations = NA, p.value = NA, FDR = NA)
View(my_cor_matrix)
my_cor_matrix$Correlation[i] <- data.frame(cor.test(met[, colnames(met)[i]], exp[, colnames(exp) == colnames(met)[1]])$p.value)
View(my_cor_matrix)
pol<-cor.test(met[, colnames(met)[i]], exp[, colnames(exp) == colnames(met)[1]])
my_cor_matrix$Correlation[i] <- cor.test(met[, colnames(met)[i]], exp[, colnames(exp) == colnames(met)[1]])$p.value
cor.test(met[, colnames(met)[i]], exp[, colnames(exp) == colnames(met)[1]])
pol$statistic
pol$parameter
pol$estimate
runApp()
my_cor_matrix <- data.frame(Gene = NA, Correlations = NA, p.value = NA, FDR = NA)
i<-1
my_cor_matrix$Gene[i] <- colnames(met)[i]
my_cor_matrix$Correlation[i] <- cor.test(met[, colnames(met)[i]], exp[, colnames(exp) == colnames(met)[1]])$estimate
my_cor_matrix$p.value[i] <- cor.test(met[, colnames(met)[i]], exp[, colnames(exp) == colnames(met)[1]])$p.value
View(my_cor_matrix)
?data.frame
my_cor_matrix <- data.frame(NULL)
my_cor_matrix$Gene[i] <- colnames(met)[i]
my_cor_matrix$Gene[i] <- colnames(met)[i]
runApp()
?p.adjust
runApp()
rownames(met) <- paste0(rownames(met), "_MET")
rownames(exp) <- paste0(rownames(exp), "_EXP")
View(exp)
View(met)
c.data <- cbind(met, exp)
c.data <- as.matrix(round(cor(c.data), 3))
corrplot(c.data, method="color", type = "lower", tl.srt = 2)
View(c.data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?ggsave
runApp()
runApp()
runApp()
?corrplot
corrplot(c.data, method="color", type = "lower", tl.srt = 2, tl.cex = 1)
corrplot(c.data, method="color", type = "lower", tl.srt = 2, tl.cex = 0.5)
corrplot(c.data, method="color", type = "lower", tl.srt = 2, tl.cex = 0.6)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
